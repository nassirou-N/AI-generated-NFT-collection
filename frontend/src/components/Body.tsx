import React, { useEffect, useState } from "react";
import { Box, CircularProgress, ImageList, Typography, useTheme, ImageListItem } from "@mui/material";
import { useAccount, useConnect, useSignMessage } from 'wagmi'
import { CheckCircleOutlined, Image } from "@mui/icons-material";
import { useRouter } from 'next/router'
import axios from 'axios'
import { StartonButton } from "@starton/ui-nextjs";

/*
|--------------------------------------------------------------------------
| Contracts
|--------------------------------------------------------------------------
*/
export interface BodyProps {}

/*
|--------------------------------------------------------------------------
| Component
|--------------------------------------------------------------------------
*/
export const Body: React.FC<BodyProps> = () => {
	const [pictures, setPictures] = useState([])
	const [tx, setTx] = useState([])

	const generatePictures = async () => {
		await fetch('http://localhost:8000/generate', {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: null
		}).then(response => {
			return response.json()
		}).then(data => {
			console.log('generatePictures --- ', data)
			setPictures(data.pictures)
		}).catch((e) => { console.error(e)})
	}

	const deployCollection = async () => {
		const body = JSON.stringify({
			pictures: pictures,
			ownerWallet: '0xA76ed24122193CF53f81F6dBEbE2a1DfF8f9e901',
			smartContractName: 'Front AI deployed collection',
			smartContractSymbol: 'FAP'
		})

		console.log(body)

		await fetch('http://localhost:8000/deploy', {
			method: 'POST',
			headers: { 'Content-type': 'application/json; charset=UTF-8' },
			mode: 'cors',
			body: body
		}).then(response => {
			return response.json()
		}).then(data => {
			console.log('deployCollection --- ', data)
			setTx(data)
		}).catch((e) => { console.error(e)})
	}


	// Render
	//--------------------------------------------------------------------------
	return (
		<Box maxWidth={1192} display="flex" flexDirection="column" gap={10} margin="auto" marginTop={10} padding={3}>
			<Box margin={'auto'}>
				<Typography variant="h1">
					Create your NFT collection{' '}
					<Typography color="secondary.main" variant="h1" component="span">
						generated by AI
					</Typography>
				</Typography>
			</Box>
			<Box maxWidth={1192} display="flex" flexDirection="row" gap={10} margin="auto" alignItems={'center'} marginTop={10} padding={3} flexWrap={'wrap'}>
				<StartonButton startIcon={'ðŸŽ¨'} size="large" variant="contained" onClick={generatePictures}>Generate</StartonButton>
				<StartonButton startIcon={'ðŸš€'} size="large" variant="contained" onClick={deployCollection}>Deploy</StartonButton>
			</Box>
			<Box maxWidth={1192} display="flex" flexDirection="row" gap={10} margin="auto" padding={3} flexWrap={'wrap'}>
				<ImageList sx={{ width: 1100, height: pictures.length*220/5}} cols={5} rowHeight={220}>
					{pictures.map((picture) => (
						<ImageListItem key={picture}>
							<img
								src={`${picture}`}
								srcSet={`${picture}`}
								style={{borderRadius: '3%'}}
								loading="lazy"
							/>
						</ImageListItem>
					))}
				</ImageList>
			</Box>
		</Box>
	)
}
